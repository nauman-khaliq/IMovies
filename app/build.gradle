plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dagger.hilt.android.plugin"
    id "org.jlleitschuh.gradle.ktlint"
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id("com.google.devtools.ksp").version("2.0.0-1.0.23") // Or latest version of KSP
}
repositories {
    maven { url 'https://jitpack.io' }
}

android {
    compileSdk 34
    defaultConfig {
        applicationId "com.naumankhaliq.imovies"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.naumankhaliq.imovies.CustomTestRunner"
        testInstrumentationRunnerArguments useTestStorageService: 'true'
    }
    buildTypes {
        debug {
            initWith debug
            applicationIdSuffix = ".debug"
            debuggable true
            buildConfigField "String", "BASE_URL", '"https://itunes.apple.com"'
        }
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", '"https://itunes.apple.com"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig true
    }
    buildFeatures.viewBinding true
    namespace 'com.naumankhaliq.imovies'

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.0"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'

    // Android
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "androidx.activity:activity-ktx:1.9.0"
    implementation "androidx.fragment:fragment-ktx:1.8.1"
    implementation "androidx.core:core-ktx:1.13.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.dynamicanimation:dynamicanimation-ktx:1.0.0-alpha03"

    // Architecture Components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.3"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.8.3"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.3"

    // Room components
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
    ksp "androidx.room:room-compiler:2.6.1"

    // Material Design
    implementation 'com.google.android.material:material:1.12.0'

    // Coil-kt
    implementation 'io.coil-kt:coil:2.7.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.14'

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:1.15.1"
    ksp "com.squareup.moshi:moshi-kotlin-codegen:1.15.1"

    // Hilt + Dagger
    implementation 'com.google.dagger:hilt-android:2.51.1'
    ksp 'com.google.dagger:hilt-compiler:2.51.1'

    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.51.1'
    kspAndroidTest 'com.google.dagger:hilt-compiler:2.51.1'
    androidTestUtil 'androidx.test.services:test-services:1.5.0'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.51.1'
    kspTest 'com.google.dagger:hilt-compiler:2.51.1'

    // Testing
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.1'
    testImplementation "androidx.room:room-testing:2.6.1"
    testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.14'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.14'
    testImplementation "junit:junit:4.13.2"
    debugImplementation "androidx.fragment:fragment-testing:1.8.1"
    testImplementation 'app.cash.turbine:turbine:0.11.0'

    // Mockk or other mocking libraries (optional)
    testImplementation "io.mockk:mockk:1.12.4"
    androidTestImplementation "io.mockk:mockk:1.12.4"
    testImplementation "org.robolectric:robolectric:4.13"

    // Android Testing
    androidTestImplementation "androidx.test.ext:junit-ktx:1.2.1" // for using activity scenario rule
    testImplementation "androidx.test.ext:junit-ktx:1.2.1"
    androidTestImplementation "androidx.test:core-ktx:1.6.1" // for launch activity activity scenario
    testImplementation "androidx.test:core-ktx:1.6.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.6.1"
    androidTestImplementation 'androidx.test:runner:1.6.1'
    debugImplementation "androidx.test:monitor:1.7.2"
    //Navigation Component
    def nav_version = "2.7.7"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //Media3 Jetpack Component
    def media3_version = "1.1.1"
    // For media playback using ExoPlayer
    implementation "androidx.media3:media3-exoplayer:$media3_version"
    // For building media playback UIs
    implementation "androidx.media3:media3-ui:$media3_version"
    // For building media playback UIs for Android TV using the Jetpack Leanback library
    implementation "androidx.media3:media3-ui-leanback:$media3_version"
    // For exposing and controlling media sessions
    implementation "androidx.media3:media3-session:$media3_version"
    // For extracting data from media containers
    implementation "androidx.media3:media3-extractor:$media3_version"
    // Common functionality for media database components
    implementation "androidx.media3:media3-database:$media3_version"
    // Common functionality for media decoders
    implementation "androidx.media3:media3-decoder:$media3_version"
    // Common functionality for loading data
    implementation "androidx.media3:media3-datasource:$media3_version"
    // Common functionality used across multiple media libraries
    implementation "androidx.media3:media3-common:$media3_version"

    //For Language Change
    implementation "com.github.YarikSOffice:lingver:1.3.0"
}